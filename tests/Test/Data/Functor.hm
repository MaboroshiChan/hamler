module Test.Data.Functor where

import Test.QuickCheck (TestGroup(..), TestResult, quickCheck)
import Prelude
import Data.Functor as Functor


listMap :: Bool
listMap = ((Functor.map (\x->x + 1) [1,2,3,4,5,6,7]) == [2,3,4,5,6,7,8]) && ((Functor.map (\x->x+1) []) == [])

test :: TestGroup (Integer -> IO TestResult)
test = Exe [
    quickCheck "functor map for List" listMap
]